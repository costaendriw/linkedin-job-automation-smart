"""
LinkedIn Job Automation Tool - Smart Edition
Aplica√ß√£o principal com filtragem inteligente e compatibilidade Chrome 140+

Desenvolvido com Playwright para m√°xima performance e compatibilidade
"""

import sys
import os
import subprocess

# Adiciona o diret√≥rio src ao path para importar os m√≥dulos
current_dir = os.path.dirname(os.path.abspath(__file__))
src_path = os.path.join(current_dir, 'src')
sys.path.insert(0, src_path)

def check_playwright_installation():
    """
    Verifica se o Playwright est√° instalado e configurado
    """
    try:
        import playwright
        print("‚úÖ Playwright importado com sucesso")
        return True
    except ImportError:
        print("‚ùå Playwright n√£o encontrado!")
        print("üì• Instale com: pip install playwright")
        return False

def install_playwright_browsers():
    """
    Instala os navegadores do Playwright se necess√°rio
    """
    try:
        print("üîç Verificando instala√ß√£o dos navegadores...")
        result = subprocess.run([
            sys.executable, "-m", "playwright", "install", "chromium"
        ], capture_output=True, text=True, timeout=300)
        
        if result.returncode == 0:
            print("‚úÖ Navegadores do Playwright instalados/atualizados")
            return True
        else:
            print(f"‚ùå Erro ao instalar navegadores: {result.stderr}")
            return False
    except subprocess.TimeoutExpired:
        print("‚è±Ô∏è Timeout na instala√ß√£o - pode estar demorando mais que o esperado")
        return False
    except Exception as e:
        print(f"‚ùå Erro na instala√ß√£o: {e}")
        return False

def main():
    """
    Fun√ß√£o principal que inicia a aplica√ß√£o
    """
    print("=" * 70)
    print("üöÄ LinkedIn Job Automation Tool - Smart Edition")
    print("=" * 70)
    print("üéØ Sistema de filtragem inteligente baseado no seu perfil")
    print("‚úÖ Compat√≠vel com Chrome 140+ (sem ChromeDriver)")
    print("‚ö° Powered by Playwright para m√°xima performance")
    print("-" * 70)
    
    # Verificar instala√ß√£o do Playwright
    if not check_playwright_installation():
        print("\nüîß Para instalar o Playwright:")
        print("   pip install playwright")
        print("   playwright install")
        input("\n‚è∏Ô∏è Pressione Enter para continuar mesmo assim...")
    
    try:
        # Tentar instalar/atualizar navegadores automaticamente
        print("\nüîß Configurando navegadores...")
        if not install_playwright_browsers():
            print("‚ö†Ô∏è Navegadores podem n√£o estar atualizados")
            print("üí° Execute manualmente: playwright install")
        
        print("\nüé® Iniciando interface gr√°fica...")
        
        # Importar e executar a GUI
        from gui import LinkedInGUI
        
        # Criar e executar a interface gr√°fica
        app = LinkedInGUI()
        app.run()
        
    except ImportError as e:
        print(f"‚ùå Erro ao importar m√≥dulos: {e}")
        print("\nüîß Solu√ß√µes poss√≠veis:")
        print("   1. Verifique se todos os arquivos est√£o na pasta 'src/'")
        print("   2. Instale as depend√™ncias: pip install -r requirements.txt")
        print("   3. Execute: playwright install")
        input("\n‚è∏Ô∏è Pressione Enter para sair...")
        
    except Exception as e:
        print(f"‚ùå Erro ao iniciar a aplica√ß√£o: {e}")
        print("\nüêõ Informa√ß√µes de debug:")
        print(f"   Python: {sys.version}")
        print(f"   Diret√≥rio atual: {current_dir}")
        print(f"   Path do src: {src_path}")
        
        # Listar arquivos para debug
        if os.path.exists(src_path):
            files = os.listdir(src_path)
            print(f"   Arquivos em src/: {files}")
        else:
            print("   ‚ùå Pasta src/ n√£o encontrada!")
        
        input("\n‚è∏Ô∏è Pressione Enter para sair...")

def check_system_requirements():
    """
    Verifica requisitos do sistema
    """
    print("üîç Verificando requisitos do sistema...")
    
    # Verificar vers√£o do Python
    python_version = sys.version_info
    if python_version.major >= 3 and python_version.minor >= 8:
        print(f"‚úÖ Python {python_version.major}.{python_version.minor} (OK)")
    else:
        print(f"‚ùå Python {python_version.major}.{python_version.minor} (requer 3.8+)")
        return False
    
    # Verificar importa√ß√µes b√°sicas
    try:
        import tkinter
        print("‚úÖ Tkinter dispon√≠vel")
    except ImportError:
        print("‚ùå Tkinter n√£o dispon√≠vel")
        return False
    
    try:
        import asyncio
        print("‚úÖ Asyncio dispon√≠vel")
    except ImportError:
        print("‚ùå Asyncio n√£o dispon√≠vel")
        return False
    
    return True

def show_features():
    """
    Mostra as principais funcionalidades do sistema
    """
    print("\nüéØ FUNCIONALIDADES PRINCIPAIS:")
    print("   ‚Ä¢ Filtragem inteligente baseada no seu perfil LinkedIn")
    print("   ‚Ä¢ Aproveitamento das recomenda√ß√µes autom√°ticas do LinkedIn")  
    print("   ‚Ä¢ Sistema de compatibilidade avan√ßado com suas skills")
    print("   ‚Ä¢ Filtros por experi√™ncia, modalidade e tipo de contrato")
    print("   ‚Ä¢ Anti-detec√ß√£o nativo para m√°xima seguran√ßa")
    print("   ‚Ä¢ Interface gr√°fica intuitiva com logs em tempo real")
    print("   ‚Ä¢ Salvamento autom√°tico de logs e estat√≠sticas")

if __name__ == "__main__":
    try:
        # Verificar requisitos do sistema
        if not check_system_requirements():
            print("\n‚ùå Requisitos do sistema n√£o atendidos")
            input("‚è∏Ô∏è Pressione Enter para sair...")
            sys.exit(1)
        
        # Mostrar funcionalidades
        show_features()
        
        # Executar aplica√ß√£o principal
        main()
        
    except KeyboardInterrupt:
        print("\n\n‚èπÔ∏è Aplica√ß√£o interrompida pelo usu√°rio")
    except Exception as e:
        print(f"\n‚ùå Erro cr√≠tico: {e}")
        input("‚è∏Ô∏è Pressione Enter para sair...")
    finally:
        print("\nüëã Encerrando aplica√ß√£o...")
        print("üéØ Obrigado por usar o LinkedIn Job Automation - Smart Edition!")